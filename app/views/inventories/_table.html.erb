<%= javascript_include_tag 'inventory-edit', defer: true =%>

<div class="table-wrapper" style="position: relative;">

<table class="table table-bordered mt-4 table-striped inventory-table" style="border: none;">
  <thead>
    <tr id="table-header" style="white-space: nowrap;">
      <th style="background-color: #732F2f; color: white; border: none;"></th>
      <th class="sortable" data-sort="item_name">
        <div class="sort-header">
          <span>Item Name</span>
          <span class="sort-arrow">▲</span>
        </div>
      </th>
      <th class="sortable" data-sort="sku">
        <div class="sort-header">
          <span>SKU</span>
          <span class="sort-arrow">▲</span>
        </div>
      </th>
      <th class="sortable" data-sort="dept_name">
        <div class="sort-header">
          <span>Department</span>
          <span class="sort-arrow">▲</span>
        </div>
      </th>
      <th class="sortable" data-sort="condition_of_item">
        <div class="sort-header">
          <span>Condition</span>
          <span class="sort-arrow">▲</span>
        </div>
      </th>
      <th class="sortable" data-sort="location">
        <div class="sort-header">
          <span>Location</span>
          <span class="sort-arrow">▲</span>
        </div>
      </th>
      <th class="sortable" data-sort="owner">
        <div class="sort-header">
          <span>Owner</span>
          <span class="sort-arrow">▲</span>
        </div>
      </th>
      <th class="sortable" data-sort="current_user">
        <div class="sort-header">
          <span>Current User</span>
          <span class="sort-arrow">▲</span>
        </div>
      </th>
      <th style="background-color: #732F2f; color: white; border: none; position: relative;">
        <div style="display: flex; justify-content: space-between; align-items: center;">
          <span>Actions</span>
          <div class="form-check form-switch" style="margin-left: 1rem;">
            <input class="form-check-input" type="checkbox" id="toggle-edit-mode">
            <label class="form-check-label" for="toggle-edit-mode" style="font-weight: normal;">Edit Mode</label>
          </div>
        </div>
      </th>
    </tr>
  </thead>
  <tbody id="inventory-body">
    <% inventories.group_by { |inv| inv.item.sku }.each do |sku, items| %>
      <% parent = items.first %>
      <tr class="inventory-group-header" data-sku="<%= sku %>">
        <td colspan="9" style="background-color: #f0f0f0; font-weight: bold; cursor: pointer;">
          ▶ <%= parent.item.name %> (SKU: <%= sku %>) — <%= items.size %> items
        </td>
      </tr>
      <% items.each do |inventory| %>
        <tr class="inventory-row grouped-child" data-sku="<%= sku %>" data-inventory-id="<%= inventory.inv_id %>">
          <td style="text-align: center;" class="no-search status-cell">
            <% if inventory.current_user.nil? %>
              <span class="badge bg-success">Available</span>
            <% else %>
              <span class="badge bg-danger">Checked Out</span>
            <% end %>
          </td>
          <td class="truncate" data-field="item_name" data-value="<%= inventory.item.name %>">
            <span><%= inventory.item.name %></span>
          </td>
          <td class="truncate" data-field="sku" data-value="<%= inventory.item.sku %>">
            <span><%= inventory.item.sku %></span>
          </td>
          <td class="truncate editable-cell" data-field="dept_name" data-value="<%= inventory.department&.name %>">
            <span><%= inventory.department&.name.presence || '—' %></span>
          </td>
          <td class="truncate editable-cell" data-field="condition_of_item" data-value="<%= inventory.condition_of_item %>">
            <span><%= inventory.condition_of_item.presence || '—' %></span>
          </td>
          <td class="truncate editable-cell" data-field="location" data-value="<%= inventory.location %>">
            <span><%= inventory.location.presence || '—' %></span>
          </td>
          <td class="truncate editable-owner-cell" data-field="Owner" data-inventory-id="<%= inventory.inv_id %>" data-owner-name="<%= inventory.original_owner&.name %>" data-owner-email="<%= inventory.original_owner&.email %>" data-short="<%= inventory.original_owner&.name %>" data-full="<%= inventory.original_owner&.email %>">
            <span class="owner-name"><%= inventory.original_owner&.name.presence || '—' %></span>
          </td>
          <td class="truncate no-wrap current-user-cell" data-short="<%= inventory.current_user&.name %>" data-full="<%= inventory.current_user&.email %>">
            <%= inventory.current_user&.name.presence || '—' %>
          </td>
          <td class="no-search action-cell">
            <div class="action-buttons">
              <% if inventory.current_user.nil? %>
                <span class="button-inline">
                  <%= button_to "Check Out", checkout_inventory_path(inventory), method: :post, class: "btn btn-sm btn-success" %>
                </span>
              <% elsif inventory.current_user == current_user %>
                <span class="button-inline">
                  <%= button_to "Return", return_inventory_path(inventory), method: :post, class: "btn btn-sm btn-secondary" %>
                </span>
              <% end %>
              <%= link_to "Delete", "#", class: "btn btn-sm btn-danger delete-btn", data: { bs_toggle: "modal", bs_target: "#deleteConfirmationModal", inventory_id: inventory.id } %>
              <%= link_to "View History", transaction_histories_path(inventory_id: inventory.inv_id), class: "btn btn-sm btn-info" %>
            </div>
          </td>
        </tr>
      <% end %>
    <% end %>
  </tbody>
</table>
</div>

<!-- Cancel Edit Confirmation Modal -->
<div class="modal fade" id="cancelEditModal" tabindex="-1" aria-labelledby="cancelEditModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
    
      <div class="modal-header">
        <h5 class="modal-title" id="cancelEditModalLabel">Discard Changes?</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        You have unsaved changes. Are you sure you want to discard them?
      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Keep Editing</button>
        <button type="button" class="btn btn-danger" id="confirm-cancel-edit">Discard Changes</button>
      </div>

    </div>
  </div>
</div>


<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Delete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this item?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <%= form_with url: "#", method: :delete, local: true, id: "delete-form" do %>
          <%= hidden_field_tag :authenticity_token, form_authenticity_token %>  
          <button type="submit" class="btn btn-danger" id="confirm-delete-btn">Delete</button>
        <% end %>
      </div>
    </div>
  </div>
</div>

<!-- Transfer Ownership Modal -->
<div class="modal fade" id="transferOwnershipModal" tabindex="-1" aria-labelledby="transferOwnershipModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">

      <div class="modal-header">
        <h5 class="modal-title" id="transferOwnershipModalLabel">Transfer Ownership</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body d-flex flex-column gap-3">

        <div class="row align-items-center justify-content-center">
          
          <div class="col-5 text-center">
            <div class="mb-2 fw-bold">Current Owner</div>
            <div class="form-control text-center bg-light" style="pointer-events: none;" id="current-owner-display">
            </div>
          </div>

          <div class="col-1 text-center">
            <div style="font-size: 2rem;">➔</div>
          </div>

          <div class="col-5 text-center">
            <div class="mb-2 fw-bold">New Owner</div>
            <input type="text" id="new-owner-search" class="form-control" placeholder="Search for new owner">
          </div>

        </div>

        <div id="search-results-container" class="mt-4">
          <table class="table table-hover table-bordered table-sm" id="search-results-table" style="display: none;">
            <thead class="table-light">
              <tr>
                <th style="width: 50%;">Name</th>
                <th style="width: 50%;">Email</th>
              </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
        </div>

      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="confirm-transfer-btn" disabled>Transfer</button>
      </div>

    </div>
  </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {
  var deleteModal = document.getElementById('deleteConfirmationModal');
  var deleteForm = document.getElementById('delete-form');
  var selectedCount = document.getElementById('selected-items-count');
  var footerDeleteBtn = document.getElementById('footer-delete-btn');
  var footerCheckoutBtn = document.getElementById('footer-checkout-btn');
  var footerReturnBtn = document.getElementById('footer-return-btn');


  document.querySelectorAll('.delete-btn').forEach(button => {
    button.addEventListener('click', function(event) {
      var inventoryId = button.getAttribute('data-inventory-id');
      var deleteUrl = '/inventories/' + inventoryId;
      deleteForm.setAttribute('action', deleteUrl);
    });
  });

  function updateSelectedCount() {
    var count = document.querySelectorAll('.isselected').length;
    selectedCount.textContent = count + " items selected";

    footerDeleteBtn.style.backgroundColor = count > 0 ? '' : 'gray';
    footerDeleteBtn.style.color = count > 0 ? 'white' : '';
    footerCheckoutBtn.style.backgroundColor = count > 0 ? '' : 'gray';
    footerCheckoutBtn.style.color = count > 0 ? 'white' : '';
    footerReturnBtn.style.backgroundColor = count > 0 ? '' : 'gray';
    footerReturnBtn.style.color = count > 0 ? 'white' : '';


    footerDeleteBtn.disabled = count === 0;
    footerCheckoutBtn.disabled = count === 0;
    footerReturnBtn.disabled = count === 0;
  }
  
  function unselectAllRows() {
    document.querySelectorAll('.inventory-row').forEach(row => {
      row.classList.remove('isselected');
    });
    updateSelectedCount();
  }
  window.unselectAllRows = unselectAllRows;

  document.querySelectorAll('.inventory-row').forEach(row => {
    row.addEventListener('click', function(event) {
      if (isEditing) return;
      if (event.target.tagName !== 'A' && event.target.tagName !== 'BUTTON') {
        row.classList.toggle('isselected');
        updateSelectedCount();
      }
    });
  });

  footerDeleteBtn.addEventListener('click', function() {
    var selectedIds = Array.from(document.querySelectorAll('.inventory-checkbox:checked')).map(checkbox => checkbox.value);
    if (selectedIds.length === 1) {
      var deleteUrl = '/inventories/' + selectedIds[0];
      deleteForm.setAttribute('action', deleteUrl);
      deleteModal.show();
    } else {
      var multiDeleteModal = new bootstrap.Modal(document.getElementById('multiDeleteConfirmationModal'));
      var selectedItemsList = document.getElementById('selected-items-list');
      selectedItemsList.innerHTML = "";
      selectedIds.forEach(id => {
        let li = document.createElement('li');
        li.textContent = `ID: ${id}`;
        selectedItemsList.appendChild(li);
      });
      multiDeleteModal.show();

      document.getElementById('footer-delete-btn').onclick = function() {
        fetch('/inventories/multi_delete', {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
          },
          body: JSON.stringify({ inventory_ids: selectedIds })
        })
        .then(response => response.json())
        .then(data => {
          if (data.status === 'success') {
            location.reload();
          }
        })
        .catch(error => console.error('Error:', error));
      };
    }
  });

  
});
</script>


<script>
document.addEventListener('DOMContentLoaded', function () {
  document.querySelectorAll('.inventory-group-header').forEach(header => {
    header.addEventListener('click', () => {
      const sku = header.dataset.sku;
      document.querySelectorAll(`.grouped-child[data-sku="${sku}"]`).forEach(row => {
        row.style.display = row.style.display === 'none' ? '' : 'none';
      });
    });
  });

  document.querySelectorAll('.sortable').forEach(header => {
    header.addEventListener('click', () => {
      const key = header.dataset.sort;
      const tbody = document.getElementById('inventory-body');
      const grouped = {};

      document.querySelectorAll('.grouped-child').forEach(row => {
        const sku = row.dataset.sku;
        grouped[sku] = grouped[sku] || { header: null, children: [] };
        grouped[sku].children.push(row);
      });

      document.querySelectorAll('.inventory-group-header').forEach(row => {
        grouped[row.dataset.sku].header = row;
      });

      const sortedGroups = Object.values(grouped).sort((a, b) => {
        const valA = a.children[0].querySelector(`[data-field="${key}"]`)?.dataset.value || '';
        const valB = b.children[0].querySelector(`[data-field="${key}"]`)?.dataset.value || '';
        return valA.localeCompare(valB);
      });

      tbody.innerHTML = '';
      sortedGroups.forEach(group => {
        tbody.appendChild(group.header);
        group.children.forEach(row => tbody.appendChild(row));
      });
    });
  });
});
</script>


<style>
.inventory-group-header {
  background-color: #f0f0f0 !important;
  cursor: pointer;
  user-select: none;
}
.inventory-group-header:hover {
  background-color: #e0e0e0 !important;
}
.grouped-child {
  background-color: white;
}

.parent-row {
  background-color: #f1f1f1 !important;
  font-weight: bold;
  user-select: none;
}

.parent-row .toggle-icon {
  margin-right: 8px;
}

.child-row {
  background-color: #fff;
}

.child-row:hover {
  background-color: #f9f9f9;
}

.form-check-label {
  opacity: 0.6;
  transition: opacity 0.3s;
  padding-right: 0.5rem;
}

.form-check-label:hover {
  opacity: 1;
}


#current-owner-info {
  font-size: 1rem;
  font-weight: 500;
}
#global-typeahead {
  background: white;
  border: 1px solid #ccc;
  border-radius: 0.25rem;
  max-height: 300px;
  overflow-y: auto;
  padding: 0.5rem;
  animation: fadeIn 0.2s ease-in-out;
  width: 100%;
}



.owner-transfer-link {
  color: #0d6efd;
  cursor: pointer;
  text-decoration: underline;
  transition: color 0.3s ease;
}

.owner-transfer-link:hover {
  color: #0a58ca;
  text-decoration: underline;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-5px); }
  to { opacity: 1; transform: translateY(0); }
}



#sort-indicator {
  position: absolute;
  height: 4px;
  background-color: #ffffff;
  bottom: 0;
  left: 0;
  width: 0;
  transition: left 0.4s ease, width 0.4s ease;
  z-index: 5;
}

thead {
  position: relative;
}


th.sortable {
  position: relative;
  cursor: pointer;
  background-color: #732F2f;
  color: white;
  border: none;
  text-align: left;
  vertical-align: middle;
  transition: background-color 0.3s, color 0.3s;
}

.sort-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

.sort-header .sort-arrow {
  display: inline-block;
  width: 1em;
  text-align: center;
  color: transparent;
  transition: color 0.3s;
}


th.sortable.sorted {
  background-color: #500000;
  color: #ffffff;
}

th.sortable.sorted .sort-arrow {
  color: #ffffff;
}

th.sortable:hover {
  background-color: #611111;
}

.table-bordered td {
  border-left: none;
  border-right: none;
}

.table-bordered .isselected td {
  background-color: #d4edda !important;
}

.inventory-checkbox {
  transform: scale(1.2);
}

.inventory-table {
  width: 98%;
  margin: auto;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.truncate {
  max-width: 150px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.wrap:not(.no-wrap) {
  max-width: 150px;
  white-space: normal;
  word-wrap: break-word;
}

@media (max-width: 1200px) {
  .inventory-table {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
  }
}

</style>
