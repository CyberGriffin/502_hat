<table class="table table-bordered mt-4 table-striped inventory-table">
  <thead>
    <tr id="table-header" style="white-space: nowrap;">
      <th style="background-color: #732F2f; color: white; border: none;"></th>
      <th class="sortable" id="sort-name">Item Name <span class="sort-arrow"></span></th>
      <th class="sortable" id="sort-sku">SKU <span class="sort-arrow"></span></th>
      <th class="sortable" id="sort-dept">Department <span class="sort-arrow"></span></th>
      <th class="sortable" id="sort-location">Location <span class="sort-arrow"></span></th>
      <th class="sortable" id="sort-condition">Condition <span class="sort-arrow"></span></th>
      <th class="sortable" id="sort-owner">Owner <span class="sort-arrow"></span></th>
      <th class="sortable" id="sort-user">Current User <span class="sort-arrow"></span></th>
      <th style="background-color: #732F2f; color: white; border: none;">Actions</th>
    </tr>
  </thead>
  <tbody>
    <% inventories.group_by { |inv| inv.item.sku }.each do |sku, group| %>
      <% first_item = group.first.item %>
      <tr class="sku-parent-row" 
          data-sku="<%= sku %>"
          data-name="<%= first_item.name %>"
          data-inventory-ids="<%= group.map(&:id).join(',') %>">
        <td colspan="9" style="cursor: pointer; background-color: #eee; font-weight: bold;">
          <span class="toggle-icon" style="margin-right: 10px;">&#9654;</span>
          SKU: <%= sku %> &mdash; <%= first_item.name %> (<%= group.size %> item<%= 's' if group.size > 1 %>)
        </td>
      </tr>

      <% group.each do |inventory| %>
        <tr class="inventory-row" 
            data-sku="<%= sku %>"
            data-name="<%= inventory.item.name %>"
            data-inventory-id="<%= inventory.id %>"
            data-current-user="<%= inventory.current_user.present? %>"
            style="display: none;">
          <td style="text-align: center;">
            <span class="badge <%= inventory.current_user.nil? ? 'bg-success' : 'bg-danger' %>">
              <%= inventory.current_user.nil? ? 'Available' : 'Checked Out' %>
            </span>
          </td>
          <td class="truncate"><%= inventory.item.name %></td>
          <td class="truncate"><%= inventory.item.sku %></td>
          <td class="truncate"><%= inventory.department&.name %></td>
          <td class="truncate"><%= inventory.location %></td>
          <td class="truncate"><%= inventory.condition_of_item %></td>
          <td class="truncate no-wrap" data-short="<%= inventory.original_owner.name %>" data-full="<%= inventory.original_owner.email %>">
            <%= inventory.original_owner.name %>
          </td>
          <td class="truncate no-wrap" data-short="<%= inventory.current_user&.name %>" data-full="<%= inventory.current_user&.email %>">
            <%= inventory.current_user&.name %>
          </td>
          <td>
            <div class="d-flex gap-1 flex-wrap">
              <%= link_to "Edit", edit_inventory_path(inventory), class: "btn btn-sm btn-warning" %>
              <% if inventory.current_user.nil? %>
                <%= button_to "Check Out", checkout_inventory_path(inventory), method: :post, class: "btn btn-sm btn-success" %>
              <% elsif inventory.current_user != current_user %>
                <span class="badge bg-secondary">Item currently borrowed</span>
              <% else %>
                <%= button_to "Return", return_inventory_path(inventory), method: :post, class: "btn btn-sm btn-secondary" %>
              <% end %>
              <%= link_to "Delete", "#", class: "btn btn-sm btn-danger delete-btn", 
                    data: { bs_toggle: "modal", bs_target: "#deleteConfirmationModal", inventory_id: inventory.id } %>
              <%= link_to "View History", transaction_histories_path(inventory_id: inventory.inv_id), class: "btn btn-sm btn-info" %>
            </div>
          </td>
        </tr>
      <% end %>
    <% end %>
    <tr class="no-search no-sort" style="<%= 'display: none;' unless inventories.empty? %>">
      <td colspan="9" style="text-align: center;">No records found.</td>
    </tr>
  </tbody>
</table>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Confirm Delete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="delete-modal-body">
        <div id="checked-out-warning" class="alert alert-warning d-none mb-3">
          <strong>Warning!</strong> This item is currently checked out.
        </div>
        <p>Are you sure you want to delete this item?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <form id="delete-form" method="post">
          <input type="hidden" name="_method" value="delete">
          <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
          <button type="submit" id="confirm-delete-btn" class="btn btn-danger">Delete</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
    const deleteForm = document.getElementById('delete-form');
    const warningDiv = document.getElementById('checked-out-warning');
    const confirmDeleteBtn = document.getElementById('confirm-delete-btn');
    const modalBody = document.getElementById('delete-modal-body');

    document.querySelectorAll('.delete-btn').forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const inventoryId = button.getAttribute('data-inventory-id');
        const inventoryRow = button.closest('.inventory-row');
        const isCheckedOut = inventoryRow.querySelector('.badge').classList.contains('bg-danger');
        
        // Update modal content based on checked-out status
        warningDiv.classList.toggle('d-none', !isCheckedOut);
        confirmDeleteBtn.textContent = isCheckedOut ? 'Delete Anyway' : 'Delete';
        
        // Set form action
        deleteForm.setAttribute('action', `/inventories/${inventoryId}`);
        
        // Show modal
        deleteModal.show();
      });
    });

    const selectedCount = document.getElementById('selected-items-count');
    const updateSelectedCount = () => {
      const count = document.querySelectorAll('.isselected').length;
      if (selectedCount) selectedCount.textContent = `${count} items selected`;

      ['footer-delete-btn', 'footer-checkout-btn', 'footer-return-btn'].forEach(id => {
        const btn = document.getElementById(id);
        if (btn) {
          btn.disabled = count === 0;
          btn.style.backgroundColor = count ? '' : 'gray';
          btn.style.color = count ? 'white' : '';
        }
      });
    };

    document.querySelectorAll('.inventory-row').forEach(row => {
      row.addEventListener('click', event => {
        if (!['A', 'BUTTON'].includes(event.target.tagName)) {
          row.classList.toggle('isselected');
          updateSelectedCount();
        }
      });
    });

    document.querySelectorAll('.sku-parent-row').forEach(parentRow => {
      parentRow.addEventListener('click', () => {
        const sku = parentRow.dataset.sku;
        const children = document.querySelectorAll(`.inventory-row[data-sku='${sku}']`);
        const icon = parentRow.querySelector('.toggle-icon');

        children.forEach(child => {
          child.style.display = (child.style.display === 'none') ? 'table-row' : 'none';
        });

        icon.innerHTML = (icon.innerHTML === '▶') ? '▼' : '▶';
      });
    });
  });
</script>

<style>
.toggle-icon {
  display: inline-block;
  transition: transform 0.2s ease;
}
.table-bordered td {
  border-left: none;
  border-right: none;
}
.table-bordered .isselected td {
  background-color: #d4edda !important;
}
.inventory-table {
  width: 98%;
  margin: auto;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.truncate {
  max-width: 150px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.no-wrap {
  white-space: nowrap;
}
@media (max-width: 1300px) {
  .inventory-table {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
  }
}
</style>