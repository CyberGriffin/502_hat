<!-- Flash Messages -->
<div id="flash-messages" class="d-flex"></div>

<!-- Controls Header -->
<div class="d-flex justify-content-between align-items-center mb-3" style="padding: 1rem;">
    <!-- Search and Filter -->
    <div class="d-flex align-items-center">
        <input style="width: 20rem;" type="text" id="search-input" placeholder="Search..." class="form-control d-inline-block" value="<%= params[:search] %>">
        <button type="button" class="btn btn-secondary ms-2" data-bs-toggle="modal" data-bs-target="#filterModal">
            Filters
        </button>
        <button type="button" class="btn btn-secondary ms-2" onclick="document.getElementById('search-input').value = ''; document.getElementById('search-input').dispatchEvent(new Event('input'));">Clear</button>
    </div>

    <div class="d-flex align-items-center gap-2">
        <button type="button" class="btn btn-primary" onclick="window.location.href='/items/'">
            New Item
        </button>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addRecordModal">
            Add Record
        </button>

        <% if current_user.admin? %>
            <button type="button" class="btn btn-danger" id="multi-delete-btn">
                Delete Selected Items
            </button>
        <% end %>
    </div>
</div>



<!-- Inventory Table -->
<div id="inventory-list">
    <%= render partial: 'table', locals: { inventories: @inventories } %>
</div>

<!-- Add Record Modal -->
<div class="modal fade" id="addRecordModal" tabindex="-1" aria-labelledby="addRecordModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="addRecordModalLabel">Add New Record</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div class="row">

                    <!-- Left Side -->
                    <div class="col-md-6" style="border-right: 1px solid black;">
                        <div id="items-table-container"></div>
                    </div>

                    <!-- Right Side -->
                    <div class="col-md-6">
                        <%= form_with model: @inventory, url: inventories_path, remote: true, id: "inventory-form" do |form| %>
                            <div class="row">
                                <div class="col">
                                    <div class="mb-3">
                                      <label for="item-field" class="form-label">Search Item</label>
                                      <input type="text" id="item-field" class="form-control" placeholder="Search by name or SKU...">
                                    </div>
                                    <%= form.hidden_field :item_id, id: "item-id-field" %>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <div class="mb-3">
                                      <label for="dept-field" class="form-label">Department</label>
                                      <input type="text" id="dept-field" class="form-control" placeholder="Search by name">
                                    </div>
                                    <%= form.hidden_field :dept_id, id: "dept-id-field" %>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <%= form.label :year_of_purchase, "Year of Purchase" %>
                                    <%= form.date_select :year_of_purchase, class: "form-control" %>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <%= form.label :location, "Location" %>
                                    <%= form.text_field :location, class: "form-control" %>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <%= form.label :condition_of_item, "Condition" %>
                                    <%= form.text_field :condition_of_item, class: "form-control" %>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <%= form.label :owner_email, "Original Owner" %>
                                    <%= form.collection_select :owner_email, User.all, :id, :email, { prompt: "Select an owner" }, class: "form-control" %>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <%= form.label :user_email, "Current User" %>
                                    <%= form.collection_select :user_email, User.all, :id, :email, { prompt: "Select a user" }, class: "form-control" %>
                                </div>
                            </div> 
                            <div class="row">
                                <div class="col">
                                    <%= form.submit "Add Record", class: "btn btn-primary", id: "add-record-button" %>
                                </div>
                            </div>
                        <% end %>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="multiDeleteConfirmationModal" tabindex="-1" aria-labelledby="multiDeleteConfirmationModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="multiDeleteConfirmationModalLabel">Confirm Bulk Delete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete the selected items?</p>
        <ul id="selected-items-list"></ul>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirm-multi-delete-btn">Delete</button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  var itemField = document.getElementById('item-field');
  var deptField = document.getElementById('dept-field');
  var tableContainer = document.getElementById('items-table-container');
  var addRecordButton = document.getElementById('add-record-button');
  var form = document.getElementById('inventory-form');

  itemField.addEventListener('focus', function() {
    fetch('/items.json?page=$(page)')
      .then(response => response.json())
      .then(items => {
        var tableHTML = '<table class="table table-striped">';
        tableHTML += '<thead><tr><th>SKU</th><th>Name</th><th>Category</th></tr></thead>';
        tableHTML += '<tbody>';
        items.forEach(function(item) {
          tableHTML += '<tr data-item-id="' + item.item_id + '" data-item-name="' + item.name + '">';
          tableHTML += '<td>' + item.sku + '</td>';
          tableHTML += '<td>' + item.name + '</td>';
          tableHTML += '<td>' + item.category.name + '</td>';
          tableHTML += '</tr>';
        });
        tableHTML += '</tbody></table>';
        
        tableContainer.innerHTML = tableHTML;
        tableContainer.style.display = 'block';
        var rows = tableContainer.querySelectorAll('tr[data-item-id]');
        rows.forEach(function(row) {
          row.addEventListener('click', function() {
            var itemId = row.getAttribute('data-item-id');
            var itemName = row.getAttribute('data-item-name');
            itemField.value = itemName;
            document.getElementById('item-id-field').value = itemId;
            tableContainer.style.display = 'none';
          });
        });
      })
      .catch(error => console.error('Error fetching items:', error));
  });

  deptField.addEventListener('focus', function() {
    fetch('/departments.json')
      .then(response => response.json())
      .then(departments => {
        var tableHTML = '<table class="table table-striped">';
        tableHTML += '<thead><tr><th>ID</th><th>Name</th></tr></thead>';
        tableHTML += '<tbody>';
        departments.forEach(function(department) {
          tableHTML += '<tr data-dept-id="' + department.id + '" data-dept-name="' + department.name + '">';
          tableHTML += '<td>' + department.id + '</td>';
          tableHTML += '<td>' + department.name + '</td>';
          tableHTML += '</tr>';
        });
        tableHTML += '</tbody></table>';
        
        tableContainer.innerHTML = tableHTML;
        tableContainer.style.display = 'block';
        var rows = tableContainer.querySelectorAll('tr[data-dept-id]');
        rows.forEach(function(row) {
          row.addEventListener('click', function() {
            var deptId = row.getAttribute('data-dept-id');
            var deptName = row.getAttribute('data-dept-name');
            deptField.value = deptName;
            document.getElementById('dept-id-field').value = deptId;
            tableContainer.style.display = 'none';
          });
        });
      })
      .catch(error => console.error('Error fetching departments:', error));
  });

  addRecordButton.addEventListener('click', function(event) {
    event.preventDefault();
    var formData = new FormData(form);
    fetch(form.action, {
      method: 'POST',
      body: formData,
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
        'Accept': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.status === 'success') {
        console.log('Record added successfully');
        location.reload();

      } else {
        alert('Failed to add record: ' + data.errors.join(', '));
      }
    })
    .catch(error => console.error('Error adding record:', error));
  });
});
</script>

<!-- Edit Inventory Modal -->
<!--
<div class="modal fade" id="editInventoryModal" tabindex="-1" aria-labelledby="editInventoryModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editInventoryModalLabel">Edit Inventory</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <%= form_with model: @inventory, url: "#", method: :patch, local: true, id: "edit-inventory-form" do |form| %>
          <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
          <div class="mb-3">
            Editing Item: <strong id="edit-item-name"></strong>
          </div>

          <div class="mb-3">
            <%= form.label :item_id, "Select Item", class: "form-label" %>
            <%= form.collection_select :item_id, Item.all, :id, :name, prompt: "Choose an item", class: "form-control" %>
          </div>

          <div class="mb-3">
            <%= form.label :year_of_purchase, "Year of Purchase", class: "form-label" %>
            <%= form.date_select :year_of_purchase, class: "form-control" %>
          </div>

          <div class="mb-3">
            <%= form.label :location, "Location", class: "form-label" %>
            <%= form.text_field :location, class: "form-control" %>
          </div>

          <div class="mb-3">
            <%= form.label :condition_of_item, "Condition", class: "form-label" %>
            <%= form.text_field :condition_of_item, class: "form-control" %>
          </div>

          <div class="mb-3">
            <%= form.label :owner_email, "Owner Email", class: "form-label" %>
            <%= form.collection_select :owner_email, User.all, :email, :name, prompt: "Select Owner", class: "form-control" %>
          </div>

          <div class="mb-3">
            <%= form.label :user_email, "Current User Email", class: "form-label" %>
            <%= form.collection_select :user_email, User.all, :email, :name, prompt: "Select Current User", class: "form-control" %>
          </div>

          <div class="mb-3">
            <%= form.label :sku, "SKU", class: "form-label" %>
            <%= form.text_field :sku, class: "form-control" %>
          </div>

          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <%= form.submit "Update Inventory", class: "btn btn-primary" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>
-->

<script>
document.addEventListener('DOMContentLoaded', function () {
  var multiDeleteBtn = document.getElementById('multi-delete-btn');
  var multiDeleteModal = new bootstrap.Modal(document.getElementById('multiDeleteConfirmationModal'));
  var confirmMultiDeleteBtn = document.getElementById('confirm-multi-delete-btn');
  var selectedItemsList = document.getElementById('selected-items-list');

  multiDeleteBtn.addEventListener('click', function () {
    var selectedIds = [];

    document.querySelectorAll('.inventory-checkbox:checked').forEach(function (checkbox) {
      selectedIds.push(checkbox.value);
    });

    if (selectedIds.length === 0) {
      alert('Please select at least one item to delete.');
      return;
    }

    selectedItemsList.innerHTML = "";
    selectedIds.forEach(id => {
      let li = document.createElement('li');
      li.textContent = `ID: ${id}`;
      selectedItemsList.appendChild(li);
    });

    multiDeleteModal.show();

    confirmMultiDeleteBtn.onclick = function () {
      fetch('/inventories/multi_delete', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({ inventory_ids: selectedIds })
      })
      .then(response => response.json())
      .then(data => {
        if (data.status === 'success') {
          location.reload();
        }
      })
      .catch(error => console.error('Error:', error));
    };
  });
});
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var searchInput = document.getElementById('search-input');

    if (!searchInput) {
      return;
    }

    searchInput.addEventListener('input', function(event) {
      var query = searchInput.value.toLowerCase();
      var rows = document.querySelectorAll('#inventory-list tbody tr:not(.no-search)');

      rows.forEach(function(row) {
        if (row.classList.contains('admin-add-row')) {
          return;
        }

        var cells = row.querySelectorAll('td');
        var match = false;

        cells.forEach(function(cell) {
          if (cell.textContent.toLowerCase().includes(query)) {
            match = true;
          }
        });

        if (match) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    });

    var headers = document.querySelectorAll('th.sortable');
    var indicator = document.createElement('div');
    indicator.style.position = 'absolute';
    indicator.style.height = '5px';
    indicator.style.backgroundColor = 'darkred';
    indicator.style.transition = 'all 0.3s ease';
    document.body.appendChild(indicator);

    function positionIndicator(header) {
      var rect = header.getBoundingClientRect();
      indicator.style.width = rect.width + 'px';
      indicator.style.top = (rect.top - 5) + 'px';
      indicator.style.left = rect.left + 'px';
      indicator.style.border = 'none';
    }

    function sortTableByHeader(header) {
      var table = header.closest('table');
      var tbody = table.querySelector('tbody');
      var rows = Array.from(tbody.querySelectorAll('tr:not(.no-sort)'));
      var index = Array.from(header.parentNode.children).indexOf(header);
      var ascending = header.classList.contains('ascending');

      rows.sort(function(rowA, rowB) {
        var cellA = rowA.children[index].textContent.trim();
        var cellB = rowB.children[index].textContent.trim();

        if (!isNaN(cellA) && !isNaN(cellB)) {
          cellA = parseFloat(cellA);
          cellB = parseFloat(cellB);
        }

        if (cellA < cellB) {
          return ascending ? 1 : -1;
        }
        if (cellA > cellB) {
          return ascending ? -1 : 1;
        }
        return 0;
      });
      
      rows.forEach(function(row, rowIndex) {
        tbody.appendChild(row);
      });

      headers.forEach(function(h) {
        h.classList.remove('ascending', 'descending', 'sorted');
        h.style.backgroundColor = 'maroon';
        h.style.color = 'white';
        h.style.border = 'none';
        h.querySelector('.sort-arrow').textContent = '';
      });

      header.classList.toggle('ascending', !ascending);
      header.classList.toggle('descending', ascending);
      header.classList.add('sorted');
      header.style.backgroundColor = 'darkred';
      header.style.color = 'white';
      header.style.border = 'none';

      var arrow = header.querySelector('.sort-arrow');
      arrow.textContent = ascending ? '▼' : '▲';
      header.title = ascending ? 'Descending' : 'Ascending';
      positionIndicator(header);
    }

    var defaultHeader = document.getElementById('sort-id');
    sortTableByHeader(defaultHeader);

    headers.forEach(function(header) {
      header.addEventListener('click', function() {
        sortTableByHeader(header);
      });
    });
  });
</script>




<script>
document.addEventListener('DOMContentLoaded', function() {
  var editModal = document.getElementById('editInventoryModal');
  var editForm = document.getElementById('edit-inventory-form');

  if (!editModal || !editForm) {
    return;
  }

  editModal.addEventListener('show.bs.modal', function(event) {
    var button = event.relatedTarget;
    var inventoryId = button.getAttribute('data-inventory-id');
    var editUrl = '/inventories/' + inventoryId;
    console.log("editUrl: " + editUrl);

    fetch(editUrl + '/edit')
      .then(response => response.json())
      .then(data => {
        editForm.action = editUrl;
        
        document.getElementById('edit-item-name').textContent = data.item_name;

        if(editForm.querySelector('[name="inventory[item_id]"]')) {
          editForm.querySelector('[name="inventory[item_id]"]').value = data.item_id;
        }
        if(editForm.querySelector('[name="inventory[year_of_purchase]"]')) {
          editForm.querySelector('[name="inventory[year_of_purchase]"]').value = data.year_of_purchase;
        }
        if(editForm.querySelector('[name="inventory[location]"]')) {
          editForm.querySelector('[name="inventory[location]"]').value = data.location;
        }
        if(editForm.querySelector('[name="inventory[condition_of_item]"]')) {
          editForm.querySelector('[name="inventory[condition_of_item]"]').value = data.condition_of_item;
        }
        if(editForm.querySelector('[name="inventory[owner_email]"]')) {
          editForm.querySelector('[name="inventory[owner_email]"]').value = data.owner_email;
        }
        if(editForm.querySelector('[name="inventory[user_email]"]')) {
          editForm.querySelector('[name="inventory[user_email]"]').value = data.user_email;
        }
        if(editForm.querySelector('[name="inventory[sku]"]')) {
          editForm.querySelector('[name="inventory[sku]"]').value = data.sku;
        }
      });
  });

  editForm.addEventListener('submit', function(event) {
    event.preventDefault();
    var formData = new FormData(editForm);
    var editUrl = editForm.action;

    fetch(editUrl, {
      method: 'PATCH',
      body: formData,
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.status === 'success') {
        $('#editInventoryModal').modal('hide');
        $.ajax({
          url: "/inventories",
          type: "GET",
          dataType: "script"
        });
      } else {
        alert('Failed to update inventory item: ' + data.errors.join(', '));
      }
    });
  });
});
</script>

<style>
  body {
    background-color:rgb(151, 151, 151);
  }
</style>